// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Subutai {

namespace {

const ::google::protobuf::Descriptor* Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Request_env_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_env_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Request_RequestType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Request_OutputType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_NetworkInterface_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_NetworkInterface_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_Container_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_Container_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Response_ResponseType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Response_ContainerStatus_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Message_2eproto() {
  protobuf_AddDesc_Message_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Message.proto");
  GOOGLE_CHECK(file != NULL);
  Request_descriptor_ = file->message_type(0);
  static const int Request_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, commandid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, workingdirectory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, command_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, args_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, environment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, stdout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, stderr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, runas_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, timeout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, isdaemon_),
  };
  Request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Request_descriptor_,
      Request::default_instance_,
      Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _has_bits_[0]),
      -1,
      -1,
      sizeof(Request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _internal_metadata_),
      -1);
  Request_env_descriptor_ = Request_descriptor_->nested_type(0);
  static const int Request_env_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_env, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_env, value_),
  };
  Request_env_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Request_env_descriptor_,
      Request_env::default_instance_,
      Request_env_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_env, _has_bits_[0]),
      -1,
      -1,
      sizeof(Request_env),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_env, _internal_metadata_),
      -1);
  Request_RequestType_descriptor_ = Request_descriptor_->enum_type(0);
  Request_OutputType_descriptor_ = Request_descriptor_->enum_type(1);
  Response_descriptor_ = file->message_type(1);
  static const int Response_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, hostname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, interfaces_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, containers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, ips_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, macs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, commandid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, responsenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, stdout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, stderr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, exitcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, configpoints_),
  };
  Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_descriptor_,
      Response::default_instance_,
      Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _internal_metadata_),
      -1);
  Response_NetworkInterface_descriptor_ = Response_descriptor_->nested_type(0);
  static const int Response_NetworkInterface_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_NetworkInterface, interfacename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_NetworkInterface, ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_NetworkInterface, mac_),
  };
  Response_NetworkInterface_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_NetworkInterface_descriptor_,
      Response_NetworkInterface::default_instance_,
      Response_NetworkInterface_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_NetworkInterface, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_NetworkInterface),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_NetworkInterface, _internal_metadata_),
      -1);
  Response_Container_descriptor_ = Response_descriptor_->nested_type(1);
  static const int Response_Container_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Container, hostname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Container, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Container, interfaces_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Container, status_),
  };
  Response_Container_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_Container_descriptor_,
      Response_Container::default_instance_,
      Response_Container_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Container, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_Container),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Container, _internal_metadata_),
      -1);
  Response_ResponseType_descriptor_ = Response_descriptor_->enum_type(0);
  Response_ContainerStatus_descriptor_ = Response_descriptor_->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Message_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Request_descriptor_, &Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Request_env_descriptor_, &Request_env::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_descriptor_, &Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_NetworkInterface_descriptor_, &Response_NetworkInterface::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_Container_descriptor_, &Response_Container::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Message_2eproto() {
  delete Request::default_instance_;
  delete Request_reflection_;
  delete Request_env::default_instance_;
  delete Request_env_reflection_;
  delete Response::default_instance_;
  delete Response_reflection_;
  delete Response_NetworkInterface::default_instance_;
  delete Response_NetworkInterface_reflection_;
  delete Response_Container::default_instance_;
  delete Response_Container_reflection_;
}

void protobuf_AddDesc_Message_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rMessage.proto\022\007Subutai\"\243\004\n\007Request\022*\n\004"
    "type\030\001 \002(\0162\034.Subutai.Request.RequestType"
    "\022\n\n\002id\030\002 \002(\t\022\021\n\tcommandId\030\003 \002(\t\022\030\n\020worki"
    "ngDirectory\030\004 \001(\t\022\017\n\007command\030\005 \001(\t\022\014\n\004ar"
    "gs\030\006 \003(\t\022)\n\013environment\030\007 \003(\0132\024.Subutai."
    "Request.env\022+\n\006stdOut\030\010 \001(\0162\033.Subutai.Re"
    "quest.OutputType\022+\n\006stdErr\030\t \001(\0162\033.Subut"
    "ai.Request.OutputType\022\r\n\005runAs\030\n \001(\t\022\017\n\007"
    "timeout\030\013 \001(\005\022\020\n\010isDaemon\030\014 \001(\005\032!\n\003env\022\013"
    "\n\003key\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\"\227\001\n\013RequestTy"
    "pe\022\023\n\017EXECUTE_REQUEST\020\000\022\025\n\021TERMINATE_REQ"
    "UEST\020\001\022\016\n\nPS_REQUEST\020\002\022\027\n\023SET_INOTIFY_RE"
    "QUEST\020\003\022\031\n\025UNSET_INOTIFY_REQUEST\020\004\022\030\n\024LI"
    "ST_INOTIFY_REQUEST\020\005\" \n\nOutputType\022\006\n\002NO"
    "\020\000\022\n\n\006RETURN\020\001\"\325\006\n\010Response\022,\n\004type\030\001 \001("
    "\0162\036.Subutai.Response.ResponseType\022\020\n\010hos"
    "tname\030\002 \001(\t\022\n\n\002id\030\003 \001(\t\0226\n\ninterfaces\030\004 "
    "\003(\0132\".Subutai.Response.NetworkInterface\022"
    "/\n\ncontainers\030\005 \003(\0132\033.Subutai.Response.C"
    "ontainer\022\013\n\003ips\030\006 \003(\t\022\014\n\004macs\030\007 \003(\t\022\021\n\tc"
    "ommandId\030\010 \001(\t\022\013\n\003pid\030\t \001(\005\022\026\n\016responseN"
    "umber\030\n \001(\005\022\016\n\006stdOut\030\013 \001(\t\022\016\n\006stdErr\030\014 "
    "\001(\t\022\020\n\010exitCode\030\r \001(\005\022\024\n\014configPoints\030\016 "
    "\003(\t\032B\n\020NetworkInterface\022\025\n\rinterfaceName"
    "\030\001 \001(\t\022\n\n\002ip\030\002 \001(\t\022\013\n\003mac\030\003 \001(\t\032\224\001\n\tCont"
    "ainer\022\020\n\010hostname\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\0226\n\ni"
    "nterfaces\030\003 \003(\0132\".Subutai.Response.Netwo"
    "rkInterface\0221\n\006status\030\004 \001(\0162!.Subutai.Re"
    "sponse.ContainerStatus\"\343\001\n\014ResponseType\022"
    "\r\n\tHEARTBEAT\020\000\022\024\n\020EXECUTE_RESPONSE\020\001\022\023\n\017"
    "EXECUTE_TIMEOUT\020\002\022\014\n\010IN_QUEUE\020\003\022\026\n\022TERMI"
    "NATE_RESPONSE\020\004\022\017\n\013PS_RESPONSE\020\005\022\030\n\024SET_"
    "INOTIFY_RESPONSE\020\006\022\032\n\026UNSET_INOTIFY_RESP"
    "ONSE\020\007\022\031\n\025LIST_INOTIFY_RESPONSE\020\010\022\021\n\rINO"
    "TIFY_EVENT\020\t\"8\n\017ContainerStatus\022\013\n\007RUNNI"
    "NG\020\000\022\013\n\007STOPPED\020\001\022\013\n\007FREEZED\020\002", 1430);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Message.proto", &protobuf_RegisterTypes);
  Request::default_instance_ = new Request();
  Request_env::default_instance_ = new Request_env();
  Response::default_instance_ = new Response();
  Response_NetworkInterface::default_instance_ = new Response_NetworkInterface();
  Response_Container::default_instance_ = new Response_Container();
  Request::default_instance_->InitAsDefaultInstance();
  Request_env::default_instance_->InitAsDefaultInstance();
  Response::default_instance_->InitAsDefaultInstance();
  Response_NetworkInterface::default_instance_->InitAsDefaultInstance();
  Response_Container::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Message_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Message_2eproto {
  StaticDescriptorInitializer_Message_2eproto() {
    protobuf_AddDesc_Message_2eproto();
  }
} static_descriptor_initializer_Message_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* Request_RequestType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_RequestType_descriptor_;
}
bool Request_RequestType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Request_RequestType Request::EXECUTE_REQUEST;
const Request_RequestType Request::TERMINATE_REQUEST;
const Request_RequestType Request::PS_REQUEST;
const Request_RequestType Request::SET_INOTIFY_REQUEST;
const Request_RequestType Request::UNSET_INOTIFY_REQUEST;
const Request_RequestType Request::LIST_INOTIFY_REQUEST;
const Request_RequestType Request::RequestType_MIN;
const Request_RequestType Request::RequestType_MAX;
const int Request::RequestType_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* Request_OutputType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_OutputType_descriptor_;
}
bool Request_OutputType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Request_OutputType Request::NO;
const Request_OutputType Request::RETURN;
const Request_OutputType Request::OutputType_MIN;
const Request_OutputType Request::OutputType_MAX;
const int Request::OutputType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Request_env::kKeyFieldNumber;
const int Request_env::kValueFieldNumber;
#endif  // !_MSC_VER

Request_env::Request_env()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Subutai.Request.env)
}

void Request_env::InitAsDefaultInstance() {
}

Request_env::Request_env(const Request_env& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Subutai.Request.env)
}

void Request_env::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_env::~Request_env() {
  // @@protoc_insertion_point(destructor:Subutai.Request.env)
  SharedDtor();
}

void Request_env::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Request_env::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request_env::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_env_descriptor_;
}

const Request_env& Request_env::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

Request_env* Request_env::default_instance_ = NULL;

Request_env* Request_env::New(::google::protobuf::Arena* arena) const {
  Request_env* n = new Request_env;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_env::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_key()) {
      key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Request_env::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Subutai.Request.env)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Request.env.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // required string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Request.env.value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Subutai.Request.env)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Subutai.Request.env)
  return false;
#undef DO_
}

void Request_env::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Subutai.Request.env)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Request.env.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Request.env.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Subutai.Request.env)
}

::google::protobuf::uint8* Request_env::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Subutai.Request.env)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Request.env.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Request.env.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Subutai.Request.env)
  return target;
}

int Request_env::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_key()) {
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  if (has_value()) {
    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  return total_size;
}
int Request_env::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());

    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_env::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Request_env* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_env>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Request_env::MergeFrom(const Request_env& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Request_env::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_env::CopyFrom(const Request_env& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_env::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Request_env::Swap(Request_env* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_env::InternalSwap(Request_env* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request_env::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_env_descriptor_;
  metadata.reflection = Request_env_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Request::kTypeFieldNumber;
const int Request::kIdFieldNumber;
const int Request::kCommandIdFieldNumber;
const int Request::kWorkingDirectoryFieldNumber;
const int Request::kCommandFieldNumber;
const int Request::kArgsFieldNumber;
const int Request::kEnvironmentFieldNumber;
const int Request::kStdOutFieldNumber;
const int Request::kStdErrFieldNumber;
const int Request::kRunAsFieldNumber;
const int Request::kTimeoutFieldNumber;
const int Request::kIsDaemonFieldNumber;
#endif  // !_MSC_VER

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Subutai.Request)
}

void Request::InitAsDefaultInstance() {
}

Request::Request(const Request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Subutai.Request)
}

void Request::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commandid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  workingdirectory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stdout_ = 0;
  stderr_ = 0;
  runas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = 0;
  isdaemon_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:Subutai.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commandid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  workingdirectory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_descriptor_;
}

const Request& Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

Request* Request::default_instance_ = NULL;

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Request*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 159u) {
    ZR_(type_, stdout_);
    if (has_id()) {
      id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_commandid()) {
      commandid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_workingdirectory()) {
      workingdirectory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_command()) {
      command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 3840u) {
    ZR_(stderr_, isdaemon_);
    if (has_runas()) {
      runas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  args_.Clear();
  environment_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Subutai.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Subutai.Request.RequestType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Subutai::Request_RequestType_IsValid(value)) {
            set_type(static_cast< ::Subutai::Request_RequestType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_id;
        break;
      }

      // required string id = 2;
      case 2: {
        if (tag == 18) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Request.id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_commandId;
        break;
      }

      // required string commandId = 3;
      case 3: {
        if (tag == 26) {
         parse_commandId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commandid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->commandid().data(), this->commandid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Request.commandId");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_workingDirectory;
        break;
      }

      // optional string workingDirectory = 4;
      case 4: {
        if (tag == 34) {
         parse_workingDirectory:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_workingdirectory()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->workingdirectory().data(), this->workingdirectory().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Request.workingDirectory");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_command;
        break;
      }

      // optional string command = 5;
      case 5: {
        if (tag == 42) {
         parse_command:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->command().data(), this->command().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Request.command");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_args;
        break;
      }

      // repeated string args = 6;
      case 6: {
        if (tag == 50) {
         parse_args:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_args()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->args(this->args_size() - 1).data(),
            this->args(this->args_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Request.args");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_args;
        if (input->ExpectTag(58)) goto parse_environment;
        break;
      }

      // repeated .Subutai.Request.env environment = 7;
      case 7: {
        if (tag == 58) {
         parse_environment:
          DO_(input->IncrementRecursionDepth());
         parse_loop_environment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_environment()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_environment;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(64)) goto parse_stdOut;
        break;
      }

      // optional .Subutai.Request.OutputType stdOut = 8;
      case 8: {
        if (tag == 64) {
         parse_stdOut:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Subutai::Request_OutputType_IsValid(value)) {
            set_stdout(static_cast< ::Subutai::Request_OutputType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_stdErr;
        break;
      }

      // optional .Subutai.Request.OutputType stdErr = 9;
      case 9: {
        if (tag == 72) {
         parse_stdErr:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Subutai::Request_OutputType_IsValid(value)) {
            set_stderr(static_cast< ::Subutai::Request_OutputType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_runAs;
        break;
      }

      // optional string runAs = 10;
      case 10: {
        if (tag == 82) {
         parse_runAs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_runas()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->runas().data(), this->runas().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Request.runAs");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_timeout;
        break;
      }

      // optional int32 timeout = 11;
      case 11: {
        if (tag == 88) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_isDaemon;
        break;
      }

      // optional int32 isDaemon = 12;
      case 12: {
        if (tag == 96) {
         parse_isDaemon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isdaemon_)));
          set_has_isdaemon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Subutai.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Subutai.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Subutai.Request)
  // required .Subutai.Request.RequestType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Request.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // required string commandId = 3;
  if (has_commandid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->commandid().data(), this->commandid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Request.commandId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->commandid(), output);
  }

  // optional string workingDirectory = 4;
  if (has_workingdirectory()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->workingdirectory().data(), this->workingdirectory().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Request.workingDirectory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->workingdirectory(), output);
  }

  // optional string command = 5;
  if (has_command()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), this->command().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Request.command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->command(), output);
  }

  // repeated string args = 6;
  for (int i = 0; i < this->args_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->args(i).data(), this->args(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "Subutai.Request.args");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->args(i), output);
  }

  // repeated .Subutai.Request.env environment = 7;
  for (unsigned int i = 0, n = this->environment_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->environment(i), output);
  }

  // optional .Subutai.Request.OutputType stdOut = 8;
  if (has_stdout()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->stdout(), output);
  }

  // optional .Subutai.Request.OutputType stdErr = 9;
  if (has_stderr()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->stderr(), output);
  }

  // optional string runAs = 10;
  if (has_runas()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->runas().data(), this->runas().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Request.runAs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->runas(), output);
  }

  // optional int32 timeout = 11;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->timeout(), output);
  }

  // optional int32 isDaemon = 12;
  if (has_isdaemon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->isdaemon(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Subutai.Request)
}

::google::protobuf::uint8* Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Subutai.Request)
  // required .Subutai.Request.RequestType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Request.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // required string commandId = 3;
  if (has_commandid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->commandid().data(), this->commandid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Request.commandId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->commandid(), target);
  }

  // optional string workingDirectory = 4;
  if (has_workingdirectory()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->workingdirectory().data(), this->workingdirectory().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Request.workingDirectory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->workingdirectory(), target);
  }

  // optional string command = 5;
  if (has_command()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), this->command().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Request.command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->command(), target);
  }

  // repeated string args = 6;
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->args(i).data(), this->args(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Request.args");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->args(i), target);
  }

  // repeated .Subutai.Request.env environment = 7;
  for (unsigned int i = 0, n = this->environment_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->environment(i), target);
  }

  // optional .Subutai.Request.OutputType stdOut = 8;
  if (has_stdout()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->stdout(), target);
  }

  // optional .Subutai.Request.OutputType stdErr = 9;
  if (has_stderr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->stderr(), target);
  }

  // optional string runAs = 10;
  if (has_runas()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->runas().data(), this->runas().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Request.runAs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->runas(), target);
  }

  // optional int32 timeout = 11;
  if (has_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->timeout(), target);
  }

  // optional int32 isDaemon = 12;
  if (has_isdaemon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->isdaemon(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Subutai.Request)
  return target;
}

int Request::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_type()) {
    // required .Subutai.Request.RequestType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_id()) {
    // required string id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_commandid()) {
    // required string commandId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commandid());
  }

  return total_size;
}
int Request::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .Subutai.Request.RequestType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required string id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string commandId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->commandid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[3 / 32] & 152) {
    // optional string workingDirectory = 4;
    if (has_workingdirectory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->workingdirectory());
    }

    // optional string command = 5;
    if (has_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->command());
    }

    // optional .Subutai.Request.OutputType stdOut = 8;
    if (has_stdout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stdout());
    }

  }
  if (_has_bits_[8 / 32] & 3840) {
    // optional .Subutai.Request.OutputType stdErr = 9;
    if (has_stderr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->stderr());
    }

    // optional string runAs = 10;
    if (has_runas()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->runas());
    }

    // optional int32 timeout = 11;
    if (has_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timeout());
    }

    // optional int32 isDaemon = 12;
    if (has_isdaemon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isdaemon());
    }

  }
  // repeated string args = 6;
  total_size += 1 * this->args_size();
  for (int i = 0; i < this->args_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->args(i));
  }

  // repeated .Subutai.Request.env environment = 7;
  total_size += 1 * this->environment_size();
  for (int i = 0; i < this->environment_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->environment(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Request* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  args_.MergeFrom(from.args_);
  environment_.MergeFrom(from.environment_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_id()) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (from.has_commandid()) {
      set_has_commandid();
      commandid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commandid_);
    }
    if (from.has_workingdirectory()) {
      set_has_workingdirectory();
      workingdirectory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.workingdirectory_);
    }
    if (from.has_command()) {
      set_has_command();
      command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
    }
    if (from.has_stdout()) {
      set_stdout(from.stdout());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_stderr()) {
      set_stderr(from.stderr());
    }
    if (from.has_runas()) {
      set_has_runas();
      runas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runas_);
    }
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
    if (from.has_isdaemon()) {
      set_isdaemon(from.isdaemon());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->environment())) return false;
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  std::swap(type_, other->type_);
  id_.Swap(&other->id_);
  commandid_.Swap(&other->commandid_);
  workingdirectory_.Swap(&other->workingdirectory_);
  command_.Swap(&other->command_);
  args_.UnsafeArenaSwap(&other->args_);
  environment_.UnsafeArenaSwap(&other->environment_);
  std::swap(stdout_, other->stdout_);
  std::swap(stderr_, other->stderr_);
  runas_.Swap(&other->runas_);
  std::swap(timeout_, other->timeout_);
  std::swap(isdaemon_, other->isdaemon_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_descriptor_;
  metadata.reflection = Request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Request_env

// required string key = 1;
bool Request_env::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request_env::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void Request_env::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request_env::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
 const ::std::string& Request_env::key() const {
  // @@protoc_insertion_point(field_get:Subutai.Request.env.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_env::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Subutai.Request.env.key)
}
 void Request_env::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Subutai.Request.env.key)
}
 void Request_env::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Subutai.Request.env.key)
}
 ::std::string* Request_env::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:Subutai.Request.env.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_env::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_env::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Subutai.Request.env.key)
}

// required string value = 2;
bool Request_env::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request_env::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void Request_env::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request_env::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& Request_env::value() const {
  // @@protoc_insertion_point(field_get:Subutai.Request.env.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_env::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Subutai.Request.env.value)
}
 void Request_env::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Subutai.Request.env.value)
}
 void Request_env::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Subutai.Request.env.value)
}
 ::std::string* Request_env::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:Subutai.Request.env.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_env::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_env::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:Subutai.Request.env.value)
}

// -------------------------------------------------------------------

// Request

// required .Subutai.Request.RequestType type = 1;
bool Request::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void Request::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::Subutai::Request_RequestType Request::type() const {
  // @@protoc_insertion_point(field_get:Subutai.Request.type)
  return static_cast< ::Subutai::Request_RequestType >(type_);
}
 void Request::set_type(::Subutai::Request_RequestType value) {
  assert(::Subutai::Request_RequestType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Subutai.Request.type)
}

// required string id = 2;
bool Request::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void Request::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
 const ::std::string& Request::id() const {
  // @@protoc_insertion_point(field_get:Subutai.Request.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Subutai.Request.id)
}
 void Request::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Subutai.Request.id)
}
 void Request::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Subutai.Request.id)
}
 ::std::string* Request::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:Subutai.Request.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_id() {
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Subutai.Request.id)
}

// required string commandId = 3;
bool Request::has_commandid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Request::set_has_commandid() {
  _has_bits_[0] |= 0x00000004u;
}
void Request::clear_has_commandid() {
  _has_bits_[0] &= ~0x00000004u;
}
void Request::clear_commandid() {
  commandid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_commandid();
}
 const ::std::string& Request::commandid() const {
  // @@protoc_insertion_point(field_get:Subutai.Request.commandId)
  return commandid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_commandid(const ::std::string& value) {
  set_has_commandid();
  commandid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Subutai.Request.commandId)
}
 void Request::set_commandid(const char* value) {
  set_has_commandid();
  commandid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Subutai.Request.commandId)
}
 void Request::set_commandid(const char* value, size_t size) {
  set_has_commandid();
  commandid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Subutai.Request.commandId)
}
 ::std::string* Request::mutable_commandid() {
  set_has_commandid();
  // @@protoc_insertion_point(field_mutable:Subutai.Request.commandId)
  return commandid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_commandid() {
  clear_has_commandid();
  return commandid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_commandid(::std::string* commandid) {
  if (commandid != NULL) {
    set_has_commandid();
  } else {
    clear_has_commandid();
  }
  commandid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commandid);
  // @@protoc_insertion_point(field_set_allocated:Subutai.Request.commandId)
}

// optional string workingDirectory = 4;
bool Request::has_workingdirectory() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Request::set_has_workingdirectory() {
  _has_bits_[0] |= 0x00000008u;
}
void Request::clear_has_workingdirectory() {
  _has_bits_[0] &= ~0x00000008u;
}
void Request::clear_workingdirectory() {
  workingdirectory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_workingdirectory();
}
 const ::std::string& Request::workingdirectory() const {
  // @@protoc_insertion_point(field_get:Subutai.Request.workingDirectory)
  return workingdirectory_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_workingdirectory(const ::std::string& value) {
  set_has_workingdirectory();
  workingdirectory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Subutai.Request.workingDirectory)
}
 void Request::set_workingdirectory(const char* value) {
  set_has_workingdirectory();
  workingdirectory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Subutai.Request.workingDirectory)
}
 void Request::set_workingdirectory(const char* value, size_t size) {
  set_has_workingdirectory();
  workingdirectory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Subutai.Request.workingDirectory)
}
 ::std::string* Request::mutable_workingdirectory() {
  set_has_workingdirectory();
  // @@protoc_insertion_point(field_mutable:Subutai.Request.workingDirectory)
  return workingdirectory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_workingdirectory() {
  clear_has_workingdirectory();
  return workingdirectory_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_workingdirectory(::std::string* workingdirectory) {
  if (workingdirectory != NULL) {
    set_has_workingdirectory();
  } else {
    clear_has_workingdirectory();
  }
  workingdirectory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workingdirectory);
  // @@protoc_insertion_point(field_set_allocated:Subutai.Request.workingDirectory)
}

// optional string command = 5;
bool Request::has_command() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Request::set_has_command() {
  _has_bits_[0] |= 0x00000010u;
}
void Request::clear_has_command() {
  _has_bits_[0] &= ~0x00000010u;
}
void Request::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_command();
}
 const ::std::string& Request::command() const {
  // @@protoc_insertion_point(field_get:Subutai.Request.command)
  return command_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_command(const ::std::string& value) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Subutai.Request.command)
}
 void Request::set_command(const char* value) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Subutai.Request.command)
}
 void Request::set_command(const char* value, size_t size) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Subutai.Request.command)
}
 ::std::string* Request::mutable_command() {
  set_has_command();
  // @@protoc_insertion_point(field_mutable:Subutai.Request.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_command() {
  clear_has_command();
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    set_has_command();
  } else {
    clear_has_command();
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:Subutai.Request.command)
}

// repeated string args = 6;
int Request::args_size() const {
  return args_.size();
}
void Request::clear_args() {
  args_.Clear();
}
 const ::std::string& Request::args(int index) const {
  // @@protoc_insertion_point(field_get:Subutai.Request.args)
  return args_.Get(index);
}
 ::std::string* Request::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:Subutai.Request.args)
  return args_.Mutable(index);
}
 void Request::set_args(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Subutai.Request.args)
  args_.Mutable(index)->assign(value);
}
 void Request::set_args(int index, const char* value) {
  args_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Subutai.Request.args)
}
 void Request::set_args(int index, const char* value, size_t size) {
  args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Subutai.Request.args)
}
 ::std::string* Request::add_args() {
  return args_.Add();
}
 void Request::add_args(const ::std::string& value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Subutai.Request.args)
}
 void Request::add_args(const char* value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Subutai.Request.args)
}
 void Request::add_args(const char* value, size_t size) {
  args_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Subutai.Request.args)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Request::args() const {
  // @@protoc_insertion_point(field_list:Subutai.Request.args)
  return args_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Request::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:Subutai.Request.args)
  return &args_;
}

// repeated .Subutai.Request.env environment = 7;
int Request::environment_size() const {
  return environment_.size();
}
void Request::clear_environment() {
  environment_.Clear();
}
 const ::Subutai::Request_env& Request::environment(int index) const {
  // @@protoc_insertion_point(field_get:Subutai.Request.environment)
  return environment_.Get(index);
}
 ::Subutai::Request_env* Request::mutable_environment(int index) {
  // @@protoc_insertion_point(field_mutable:Subutai.Request.environment)
  return environment_.Mutable(index);
}
 ::Subutai::Request_env* Request::add_environment() {
  // @@protoc_insertion_point(field_add:Subutai.Request.environment)
  return environment_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::Subutai::Request_env >&
Request::environment() const {
  // @@protoc_insertion_point(field_list:Subutai.Request.environment)
  return environment_;
}
 ::google::protobuf::RepeatedPtrField< ::Subutai::Request_env >*
Request::mutable_environment() {
  // @@protoc_insertion_point(field_mutable_list:Subutai.Request.environment)
  return &environment_;
}

// optional .Subutai.Request.OutputType stdOut = 8;
bool Request::has_stdout() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Request::set_has_stdout() {
  _has_bits_[0] |= 0x00000080u;
}
void Request::clear_has_stdout() {
  _has_bits_[0] &= ~0x00000080u;
}
void Request::clear_stdout() {
  stdout_ = 0;
  clear_has_stdout();
}
 ::Subutai::Request_OutputType Request::stdout() const {
  // @@protoc_insertion_point(field_get:Subutai.Request.stdOut)
  return static_cast< ::Subutai::Request_OutputType >(stdout_);
}
 void Request::set_stdout(::Subutai::Request_OutputType value) {
  assert(::Subutai::Request_OutputType_IsValid(value));
  set_has_stdout();
  stdout_ = value;
  // @@protoc_insertion_point(field_set:Subutai.Request.stdOut)
}

// optional .Subutai.Request.OutputType stdErr = 9;
bool Request::has_stderr() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Request::set_has_stderr() {
  _has_bits_[0] |= 0x00000100u;
}
void Request::clear_has_stderr() {
  _has_bits_[0] &= ~0x00000100u;
}
void Request::clear_stderr() {
  stderr_ = 0;
  clear_has_stderr();
}
 ::Subutai::Request_OutputType Request::stderr() const {
  // @@protoc_insertion_point(field_get:Subutai.Request.stdErr)
  return static_cast< ::Subutai::Request_OutputType >(stderr_);
}
 void Request::set_stderr(::Subutai::Request_OutputType value) {
  assert(::Subutai::Request_OutputType_IsValid(value));
  set_has_stderr();
  stderr_ = value;
  // @@protoc_insertion_point(field_set:Subutai.Request.stdErr)
}

// optional string runAs = 10;
bool Request::has_runas() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Request::set_has_runas() {
  _has_bits_[0] |= 0x00000200u;
}
void Request::clear_has_runas() {
  _has_bits_[0] &= ~0x00000200u;
}
void Request::clear_runas() {
  runas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_runas();
}
 const ::std::string& Request::runas() const {
  // @@protoc_insertion_point(field_get:Subutai.Request.runAs)
  return runas_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_runas(const ::std::string& value) {
  set_has_runas();
  runas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Subutai.Request.runAs)
}
 void Request::set_runas(const char* value) {
  set_has_runas();
  runas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Subutai.Request.runAs)
}
 void Request::set_runas(const char* value, size_t size) {
  set_has_runas();
  runas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Subutai.Request.runAs)
}
 ::std::string* Request::mutable_runas() {
  set_has_runas();
  // @@protoc_insertion_point(field_mutable:Subutai.Request.runAs)
  return runas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_runas() {
  clear_has_runas();
  return runas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_runas(::std::string* runas) {
  if (runas != NULL) {
    set_has_runas();
  } else {
    clear_has_runas();
  }
  runas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), runas);
  // @@protoc_insertion_point(field_set_allocated:Subutai.Request.runAs)
}

// optional int32 timeout = 11;
bool Request::has_timeout() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Request::set_has_timeout() {
  _has_bits_[0] |= 0x00000400u;
}
void Request::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000400u;
}
void Request::clear_timeout() {
  timeout_ = 0;
  clear_has_timeout();
}
 ::google::protobuf::int32 Request::timeout() const {
  // @@protoc_insertion_point(field_get:Subutai.Request.timeout)
  return timeout_;
}
 void Request::set_timeout(::google::protobuf::int32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:Subutai.Request.timeout)
}

// optional int32 isDaemon = 12;
bool Request::has_isdaemon() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Request::set_has_isdaemon() {
  _has_bits_[0] |= 0x00000800u;
}
void Request::clear_has_isdaemon() {
  _has_bits_[0] &= ~0x00000800u;
}
void Request::clear_isdaemon() {
  isdaemon_ = 0;
  clear_has_isdaemon();
}
 ::google::protobuf::int32 Request::isdaemon() const {
  // @@protoc_insertion_point(field_get:Subutai.Request.isDaemon)
  return isdaemon_;
}
 void Request::set_isdaemon(::google::protobuf::int32 value) {
  set_has_isdaemon();
  isdaemon_ = value;
  // @@protoc_insertion_point(field_set:Subutai.Request.isDaemon)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Response_ResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_ResponseType_descriptor_;
}
bool Response_ResponseType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Response_ResponseType Response::HEARTBEAT;
const Response_ResponseType Response::EXECUTE_RESPONSE;
const Response_ResponseType Response::EXECUTE_TIMEOUT;
const Response_ResponseType Response::IN_QUEUE;
const Response_ResponseType Response::TERMINATE_RESPONSE;
const Response_ResponseType Response::PS_RESPONSE;
const Response_ResponseType Response::SET_INOTIFY_RESPONSE;
const Response_ResponseType Response::UNSET_INOTIFY_RESPONSE;
const Response_ResponseType Response::LIST_INOTIFY_RESPONSE;
const Response_ResponseType Response::INOTIFY_EVENT;
const Response_ResponseType Response::ResponseType_MIN;
const Response_ResponseType Response::ResponseType_MAX;
const int Response::ResponseType_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* Response_ContainerStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_ContainerStatus_descriptor_;
}
bool Response_ContainerStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Response_ContainerStatus Response::RUNNING;
const Response_ContainerStatus Response::STOPPED;
const Response_ContainerStatus Response::FREEZED;
const Response_ContainerStatus Response::ContainerStatus_MIN;
const Response_ContainerStatus Response::ContainerStatus_MAX;
const int Response::ContainerStatus_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Response_NetworkInterface::kInterfaceNameFieldNumber;
const int Response_NetworkInterface::kIpFieldNumber;
const int Response_NetworkInterface::kMacFieldNumber;
#endif  // !_MSC_VER

Response_NetworkInterface::Response_NetworkInterface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Subutai.Response.NetworkInterface)
}

void Response_NetworkInterface::InitAsDefaultInstance() {
}

Response_NetworkInterface::Response_NetworkInterface(const Response_NetworkInterface& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Subutai.Response.NetworkInterface)
}

void Response_NetworkInterface::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  interfacename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_NetworkInterface::~Response_NetworkInterface() {
  // @@protoc_insertion_point(destructor:Subutai.Response.NetworkInterface)
  SharedDtor();
}

void Response_NetworkInterface::SharedDtor() {
  interfacename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Response_NetworkInterface::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_NetworkInterface::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_NetworkInterface_descriptor_;
}

const Response_NetworkInterface& Response_NetworkInterface::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

Response_NetworkInterface* Response_NetworkInterface::default_instance_ = NULL;

Response_NetworkInterface* Response_NetworkInterface::New(::google::protobuf::Arena* arena) const {
  Response_NetworkInterface* n = new Response_NetworkInterface;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_NetworkInterface::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    if (has_interfacename()) {
      interfacename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_ip()) {
      ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_mac()) {
      mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_NetworkInterface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Subutai.Response.NetworkInterface)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string interfaceName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interfacename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->interfacename().data(), this->interfacename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Response.NetworkInterface.interfaceName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ip;
        break;
      }

      // optional string ip = 2;
      case 2: {
        if (tag == 18) {
         parse_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Response.NetworkInterface.ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mac;
        break;
      }

      // optional string mac = 3;
      case 3: {
        if (tag == 26) {
         parse_mac:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mac().data(), this->mac().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Response.NetworkInterface.mac");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Subutai.Response.NetworkInterface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Subutai.Response.NetworkInterface)
  return false;
#undef DO_
}

void Response_NetworkInterface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Subutai.Response.NetworkInterface)
  // optional string interfaceName = 1;
  if (has_interfacename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->interfacename().data(), this->interfacename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.NetworkInterface.interfaceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->interfacename(), output);
  }

  // optional string ip = 2;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.NetworkInterface.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip(), output);
  }

  // optional string mac = 3;
  if (has_mac()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mac().data(), this->mac().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.NetworkInterface.mac");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mac(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Subutai.Response.NetworkInterface)
}

::google::protobuf::uint8* Response_NetworkInterface::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Subutai.Response.NetworkInterface)
  // optional string interfaceName = 1;
  if (has_interfacename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->interfacename().data(), this->interfacename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.NetworkInterface.interfaceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->interfacename(), target);
  }

  // optional string ip = 2;
  if (has_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.NetworkInterface.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip(), target);
  }

  // optional string mac = 3;
  if (has_mac()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mac().data(), this->mac().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.NetworkInterface.mac");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mac(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Subutai.Response.NetworkInterface)
  return target;
}

int Response_NetworkInterface::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7) {
    // optional string interfaceName = 1;
    if (has_interfacename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->interfacename());
    }

    // optional string ip = 2;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ip());
    }

    // optional string mac = 3;
    if (has_mac()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mac());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_NetworkInterface::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Response_NetworkInterface* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_NetworkInterface>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response_NetworkInterface::MergeFrom(const Response_NetworkInterface& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_interfacename()) {
      set_has_interfacename();
      interfacename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interfacename_);
    }
    if (from.has_ip()) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
    if (from.has_mac()) {
      set_has_mac();
      mac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_NetworkInterface::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_NetworkInterface::CopyFrom(const Response_NetworkInterface& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_NetworkInterface::IsInitialized() const {

  return true;
}

void Response_NetworkInterface::Swap(Response_NetworkInterface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_NetworkInterface::InternalSwap(Response_NetworkInterface* other) {
  interfacename_.Swap(&other->interfacename_);
  ip_.Swap(&other->ip_);
  mac_.Swap(&other->mac_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_NetworkInterface::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_NetworkInterface_descriptor_;
  metadata.reflection = Response_NetworkInterface_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Response_Container::kHostnameFieldNumber;
const int Response_Container::kIdFieldNumber;
const int Response_Container::kInterfacesFieldNumber;
const int Response_Container::kStatusFieldNumber;
#endif  // !_MSC_VER

Response_Container::Response_Container()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Subutai.Response.Container)
}

void Response_Container::InitAsDefaultInstance() {
}

Response_Container::Response_Container(const Response_Container& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Subutai.Response.Container)
}

void Response_Container::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_Container::~Response_Container() {
  // @@protoc_insertion_point(destructor:Subutai.Response.Container)
  SharedDtor();
}

void Response_Container::SharedDtor() {
  hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Response_Container::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Container::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Container_descriptor_;
}

const Response_Container& Response_Container::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

Response_Container* Response_Container::default_instance_ = NULL;

Response_Container* Response_Container::New(::google::protobuf::Arena* arena) const {
  Response_Container* n = new Response_Container;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Container::Clear() {
  if (_has_bits_[0 / 32] & 11u) {
    if (has_hostname()) {
      hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_id()) {
      id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    status_ = 0;
  }
  interfaces_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_Container::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Subutai.Response.Container)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string hostname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hostname().data(), this->hostname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Response.Container.hostname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_id;
        break;
      }

      // optional string id = 2;
      case 2: {
        if (tag == 18) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Response.Container.id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_interfaces;
        break;
      }

      // repeated .Subutai.Response.NetworkInterface interfaces = 3;
      case 3: {
        if (tag == 26) {
         parse_interfaces:
          DO_(input->IncrementRecursionDepth());
         parse_loop_interfaces:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_interfaces()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_interfaces;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_status;
        break;
      }

      // optional .Subutai.Response.ContainerStatus status = 4;
      case 4: {
        if (tag == 32) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Subutai::Response_ContainerStatus_IsValid(value)) {
            set_status(static_cast< ::Subutai::Response_ContainerStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Subutai.Response.Container)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Subutai.Response.Container)
  return false;
#undef DO_
}

void Response_Container::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Subutai.Response.Container)
  // optional string hostname = 1;
  if (has_hostname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), this->hostname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.Container.hostname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hostname(), output);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.Container.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // repeated .Subutai.Response.NetworkInterface interfaces = 3;
  for (unsigned int i = 0, n = this->interfaces_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->interfaces(i), output);
  }

  // optional .Subutai.Response.ContainerStatus status = 4;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Subutai.Response.Container)
}

::google::protobuf::uint8* Response_Container::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Subutai.Response.Container)
  // optional string hostname = 1;
  if (has_hostname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), this->hostname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.Container.hostname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hostname(), target);
  }

  // optional string id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.Container.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // repeated .Subutai.Response.NetworkInterface interfaces = 3;
  for (unsigned int i = 0, n = this->interfaces_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->interfaces(i), target);
  }

  // optional .Subutai.Response.ContainerStatus status = 4;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Subutai.Response.Container)
  return target;
}

int Response_Container::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 11) {
    // optional string hostname = 1;
    if (has_hostname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hostname());
    }

    // optional string id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional .Subutai.Response.ContainerStatus status = 4;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  // repeated .Subutai.Response.NetworkInterface interfaces = 3;
  total_size += 1 * this->interfaces_size();
  for (int i = 0; i < this->interfaces_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->interfaces(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Container::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Response_Container* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Container>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response_Container::MergeFrom(const Response_Container& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  interfaces_.MergeFrom(from.interfaces_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hostname()) {
      set_has_hostname();
      hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
    }
    if (from.has_id()) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_Container::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Container::CopyFrom(const Response_Container& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Container::IsInitialized() const {

  return true;
}

void Response_Container::Swap(Response_Container* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Container::InternalSwap(Response_Container* other) {
  hostname_.Swap(&other->hostname_);
  id_.Swap(&other->id_);
  interfaces_.UnsafeArenaSwap(&other->interfaces_);
  std::swap(status_, other->status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Container::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_Container_descriptor_;
  metadata.reflection = Response_Container_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Response::kTypeFieldNumber;
const int Response::kHostnameFieldNumber;
const int Response::kIdFieldNumber;
const int Response::kInterfacesFieldNumber;
const int Response::kContainersFieldNumber;
const int Response::kIpsFieldNumber;
const int Response::kMacsFieldNumber;
const int Response::kCommandIdFieldNumber;
const int Response::kPidFieldNumber;
const int Response::kResponseNumberFieldNumber;
const int Response::kStdOutFieldNumber;
const int Response::kStdErrFieldNumber;
const int Response::kExitCodeFieldNumber;
const int Response::kConfigPointsFieldNumber;
#endif  // !_MSC_VER

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Subutai.Response)
}

void Response::InitAsDefaultInstance() {
}

Response::Response(const Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Subutai.Response)
}

void Response::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commandid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pid_ = 0;
  responsenumber_ = 0;
  stdout_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stderr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exitcode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:Subutai.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commandid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stdout_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stderr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_descriptor_;
}

const Response& Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

Response* Response::default_instance_ = NULL;

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Response*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 135u) {
    type_ = 0;
    if (has_hostname()) {
      hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_id()) {
      id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_commandid()) {
      commandid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 7936u) {
    ZR_(responsenumber_, exitcode_);
    pid_ = 0;
    if (has_stdout()) {
      stdout_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_stderr()) {
      stderr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  interfaces_.Clear();
  containers_.Clear();
  ips_.Clear();
  macs_.Clear();
  configpoints_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Subutai.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Subutai.Response.ResponseType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Subutai::Response_ResponseType_IsValid(value)) {
            set_type(static_cast< ::Subutai::Response_ResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_hostname;
        break;
      }

      // optional string hostname = 2;
      case 2: {
        if (tag == 18) {
         parse_hostname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hostname().data(), this->hostname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Response.hostname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_id;
        break;
      }

      // optional string id = 3;
      case 3: {
        if (tag == 26) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Response.id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_interfaces;
        break;
      }

      // repeated .Subutai.Response.NetworkInterface interfaces = 4;
      case 4: {
        if (tag == 34) {
         parse_interfaces:
          DO_(input->IncrementRecursionDepth());
         parse_loop_interfaces:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_interfaces()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_interfaces;
        if (input->ExpectTag(42)) goto parse_loop_containers;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .Subutai.Response.Container containers = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_containers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_containers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_containers;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(50)) goto parse_ips;
        break;
      }

      // repeated string ips = 6;
      case 6: {
        if (tag == 50) {
         parse_ips:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_ips()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ips(this->ips_size() - 1).data(),
            this->ips(this->ips_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Response.ips");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_ips;
        if (input->ExpectTag(58)) goto parse_macs;
        break;
      }

      // repeated string macs = 7;
      case 7: {
        if (tag == 58) {
         parse_macs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_macs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->macs(this->macs_size() - 1).data(),
            this->macs(this->macs_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Response.macs");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_macs;
        if (input->ExpectTag(66)) goto parse_commandId;
        break;
      }

      // optional string commandId = 8;
      case 8: {
        if (tag == 66) {
         parse_commandId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commandid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->commandid().data(), this->commandid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Response.commandId");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_pid;
        break;
      }

      // optional int32 pid = 9;
      case 9: {
        if (tag == 72) {
         parse_pid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_)));
          set_has_pid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_responseNumber;
        break;
      }

      // optional int32 responseNumber = 10;
      case 10: {
        if (tag == 80) {
         parse_responseNumber:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &responsenumber_)));
          set_has_responsenumber();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_stdOut;
        break;
      }

      // optional string stdOut = 11;
      case 11: {
        if (tag == 90) {
         parse_stdOut:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stdout()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stdout().data(), this->stdout().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Response.stdOut");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_stdErr;
        break;
      }

      // optional string stdErr = 12;
      case 12: {
        if (tag == 98) {
         parse_stdErr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stderr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stderr().data(), this->stderr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Response.stdErr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_exitCode;
        break;
      }

      // optional int32 exitCode = 13;
      case 13: {
        if (tag == 104) {
         parse_exitCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exitcode_)));
          set_has_exitcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_configPoints;
        break;
      }

      // repeated string configPoints = 14;
      case 14: {
        if (tag == 114) {
         parse_configPoints:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_configpoints()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->configpoints(this->configpoints_size() - 1).data(),
            this->configpoints(this->configpoints_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Subutai.Response.configPoints");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_configPoints;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Subutai.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Subutai.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Subutai.Response)
  // optional .Subutai.Response.ResponseType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional string hostname = 2;
  if (has_hostname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), this->hostname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.hostname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hostname(), output);
  }

  // optional string id = 3;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->id(), output);
  }

  // repeated .Subutai.Response.NetworkInterface interfaces = 4;
  for (unsigned int i = 0, n = this->interfaces_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->interfaces(i), output);
  }

  // repeated .Subutai.Response.Container containers = 5;
  for (unsigned int i = 0, n = this->containers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->containers(i), output);
  }

  // repeated string ips = 6;
  for (int i = 0; i < this->ips_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->ips(i).data(), this->ips(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "Subutai.Response.ips");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->ips(i), output);
  }

  // repeated string macs = 7;
  for (int i = 0; i < this->macs_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->macs(i).data(), this->macs(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "Subutai.Response.macs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->macs(i), output);
  }

  // optional string commandId = 8;
  if (has_commandid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->commandid().data(), this->commandid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.commandId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->commandid(), output);
  }

  // optional int32 pid = 9;
  if (has_pid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->pid(), output);
  }

  // optional int32 responseNumber = 10;
  if (has_responsenumber()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->responsenumber(), output);
  }

  // optional string stdOut = 11;
  if (has_stdout()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stdout().data(), this->stdout().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.stdOut");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->stdout(), output);
  }

  // optional string stdErr = 12;
  if (has_stderr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stderr().data(), this->stderr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.stdErr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->stderr(), output);
  }

  // optional int32 exitCode = 13;
  if (has_exitcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->exitcode(), output);
  }

  // repeated string configPoints = 14;
  for (int i = 0; i < this->configpoints_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->configpoints(i).data(), this->configpoints(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "Subutai.Response.configPoints");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->configpoints(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Subutai.Response)
}

::google::protobuf::uint8* Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Subutai.Response)
  // optional .Subutai.Response.ResponseType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional string hostname = 2;
  if (has_hostname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), this->hostname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.hostname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hostname(), target);
  }

  // optional string id = 3;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->id(), target);
  }

  // repeated .Subutai.Response.NetworkInterface interfaces = 4;
  for (unsigned int i = 0, n = this->interfaces_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->interfaces(i), target);
  }

  // repeated .Subutai.Response.Container containers = 5;
  for (unsigned int i = 0, n = this->containers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->containers(i), target);
  }

  // repeated string ips = 6;
  for (int i = 0; i < this->ips_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ips(i).data(), this->ips(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.ips");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->ips(i), target);
  }

  // repeated string macs = 7;
  for (int i = 0; i < this->macs_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macs(i).data(), this->macs(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.macs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->macs(i), target);
  }

  // optional string commandId = 8;
  if (has_commandid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->commandid().data(), this->commandid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.commandId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->commandid(), target);
  }

  // optional int32 pid = 9;
  if (has_pid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->pid(), target);
  }

  // optional int32 responseNumber = 10;
  if (has_responsenumber()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->responsenumber(), target);
  }

  // optional string stdOut = 11;
  if (has_stdout()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stdout().data(), this->stdout().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.stdOut");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->stdout(), target);
  }

  // optional string stdErr = 12;
  if (has_stderr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stderr().data(), this->stderr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.stdErr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->stderr(), target);
  }

  // optional int32 exitCode = 13;
  if (has_exitcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->exitcode(), target);
  }

  // repeated string configPoints = 14;
  for (int i = 0; i < this->configpoints_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->configpoints(i).data(), this->configpoints(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Subutai.Response.configPoints");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(14, this->configpoints(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Subutai.Response)
  return target;
}

int Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 135) {
    // optional .Subutai.Response.ResponseType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional string hostname = 2;
    if (has_hostname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hostname());
    }

    // optional string id = 3;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string commandId = 8;
    if (has_commandid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->commandid());
    }

  }
  if (_has_bits_[8 / 32] & 7936) {
    // optional int32 pid = 9;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pid());
    }

    // optional int32 responseNumber = 10;
    if (has_responsenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->responsenumber());
    }

    // optional string stdOut = 11;
    if (has_stdout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stdout());
    }

    // optional string stdErr = 12;
    if (has_stderr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stderr());
    }

    // optional int32 exitCode = 13;
    if (has_exitcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exitcode());
    }

  }
  // repeated .Subutai.Response.NetworkInterface interfaces = 4;
  total_size += 1 * this->interfaces_size();
  for (int i = 0; i < this->interfaces_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->interfaces(i));
  }

  // repeated .Subutai.Response.Container containers = 5;
  total_size += 1 * this->containers_size();
  for (int i = 0; i < this->containers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->containers(i));
  }

  // repeated string ips = 6;
  total_size += 1 * this->ips_size();
  for (int i = 0; i < this->ips_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->ips(i));
  }

  // repeated string macs = 7;
  total_size += 1 * this->macs_size();
  for (int i = 0; i < this->macs_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->macs(i));
  }

  // repeated string configPoints = 14;
  total_size += 1 * this->configpoints_size();
  for (int i = 0; i < this->configpoints_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->configpoints(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Response* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  interfaces_.MergeFrom(from.interfaces_);
  containers_.MergeFrom(from.containers_);
  ips_.MergeFrom(from.ips_);
  macs_.MergeFrom(from.macs_);
  configpoints_.MergeFrom(from.configpoints_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_hostname()) {
      set_has_hostname();
      hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
    }
    if (from.has_id()) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (from.has_commandid()) {
      set_has_commandid();
      commandid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commandid_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_pid()) {
      set_pid(from.pid());
    }
    if (from.has_responsenumber()) {
      set_responsenumber(from.responsenumber());
    }
    if (from.has_stdout()) {
      set_has_stdout();
      stdout_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stdout_);
    }
    if (from.has_stderr()) {
      set_has_stderr();
      stderr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stderr_);
    }
    if (from.has_exitcode()) {
      set_exitcode(from.exitcode());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {

  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  std::swap(type_, other->type_);
  hostname_.Swap(&other->hostname_);
  id_.Swap(&other->id_);
  interfaces_.UnsafeArenaSwap(&other->interfaces_);
  containers_.UnsafeArenaSwap(&other->containers_);
  ips_.UnsafeArenaSwap(&other->ips_);
  macs_.UnsafeArenaSwap(&other->macs_);
  commandid_.Swap(&other->commandid_);
  std::swap(pid_, other->pid_);
  std::swap(responsenumber_, other->responsenumber_);
  stdout_.Swap(&other->stdout_);
  stderr_.Swap(&other->stderr_);
  std::swap(exitcode_, other->exitcode_);
  configpoints_.UnsafeArenaSwap(&other->configpoints_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_descriptor_;
  metadata.reflection = Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Response_NetworkInterface

// optional string interfaceName = 1;
bool Response_NetworkInterface::has_interfacename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_NetworkInterface::set_has_interfacename() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_NetworkInterface::clear_has_interfacename() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_NetworkInterface::clear_interfacename() {
  interfacename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_interfacename();
}
 const ::std::string& Response_NetworkInterface::interfacename() const {
  // @@protoc_insertion_point(field_get:Subutai.Response.NetworkInterface.interfaceName)
  return interfacename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_NetworkInterface::set_interfacename(const ::std::string& value) {
  set_has_interfacename();
  interfacename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Subutai.Response.NetworkInterface.interfaceName)
}
 void Response_NetworkInterface::set_interfacename(const char* value) {
  set_has_interfacename();
  interfacename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Subutai.Response.NetworkInterface.interfaceName)
}
 void Response_NetworkInterface::set_interfacename(const char* value, size_t size) {
  set_has_interfacename();
  interfacename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Subutai.Response.NetworkInterface.interfaceName)
}
 ::std::string* Response_NetworkInterface::mutable_interfacename() {
  set_has_interfacename();
  // @@protoc_insertion_point(field_mutable:Subutai.Response.NetworkInterface.interfaceName)
  return interfacename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_NetworkInterface::release_interfacename() {
  clear_has_interfacename();
  return interfacename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_NetworkInterface::set_allocated_interfacename(::std::string* interfacename) {
  if (interfacename != NULL) {
    set_has_interfacename();
  } else {
    clear_has_interfacename();
  }
  interfacename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), interfacename);
  // @@protoc_insertion_point(field_set_allocated:Subutai.Response.NetworkInterface.interfaceName)
}

// optional string ip = 2;
bool Response_NetworkInterface::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_NetworkInterface::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_NetworkInterface::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_NetworkInterface::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
 const ::std::string& Response_NetworkInterface::ip() const {
  // @@protoc_insertion_point(field_get:Subutai.Response.NetworkInterface.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_NetworkInterface::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Subutai.Response.NetworkInterface.ip)
}
 void Response_NetworkInterface::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Subutai.Response.NetworkInterface.ip)
}
 void Response_NetworkInterface::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Subutai.Response.NetworkInterface.ip)
}
 ::std::string* Response_NetworkInterface::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:Subutai.Response.NetworkInterface.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_NetworkInterface::release_ip() {
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_NetworkInterface::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:Subutai.Response.NetworkInterface.ip)
}

// optional string mac = 3;
bool Response_NetworkInterface::has_mac() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Response_NetworkInterface::set_has_mac() {
  _has_bits_[0] |= 0x00000004u;
}
void Response_NetworkInterface::clear_has_mac() {
  _has_bits_[0] &= ~0x00000004u;
}
void Response_NetworkInterface::clear_mac() {
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mac();
}
 const ::std::string& Response_NetworkInterface::mac() const {
  // @@protoc_insertion_point(field_get:Subutai.Response.NetworkInterface.mac)
  return mac_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_NetworkInterface::set_mac(const ::std::string& value) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Subutai.Response.NetworkInterface.mac)
}
 void Response_NetworkInterface::set_mac(const char* value) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Subutai.Response.NetworkInterface.mac)
}
 void Response_NetworkInterface::set_mac(const char* value, size_t size) {
  set_has_mac();
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Subutai.Response.NetworkInterface.mac)
}
 ::std::string* Response_NetworkInterface::mutable_mac() {
  set_has_mac();
  // @@protoc_insertion_point(field_mutable:Subutai.Response.NetworkInterface.mac)
  return mac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_NetworkInterface::release_mac() {
  clear_has_mac();
  return mac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_NetworkInterface::set_allocated_mac(::std::string* mac) {
  if (mac != NULL) {
    set_has_mac();
  } else {
    clear_has_mac();
  }
  mac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac);
  // @@protoc_insertion_point(field_set_allocated:Subutai.Response.NetworkInterface.mac)
}

// -------------------------------------------------------------------

// Response_Container

// optional string hostname = 1;
bool Response_Container::has_hostname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_Container::set_has_hostname() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_Container::clear_has_hostname() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_Container::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hostname();
}
 const ::std::string& Response_Container::hostname() const {
  // @@protoc_insertion_point(field_get:Subutai.Response.Container.hostname)
  return hostname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_Container::set_hostname(const ::std::string& value) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Subutai.Response.Container.hostname)
}
 void Response_Container::set_hostname(const char* value) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Subutai.Response.Container.hostname)
}
 void Response_Container::set_hostname(const char* value, size_t size) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Subutai.Response.Container.hostname)
}
 ::std::string* Response_Container::mutable_hostname() {
  set_has_hostname();
  // @@protoc_insertion_point(field_mutable:Subutai.Response.Container.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_Container::release_hostname() {
  clear_has_hostname();
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_Container::set_allocated_hostname(::std::string* hostname) {
  if (hostname != NULL) {
    set_has_hostname();
  } else {
    clear_has_hostname();
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:Subutai.Response.Container.hostname)
}

// optional string id = 2;
bool Response_Container::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_Container::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_Container::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_Container::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
 const ::std::string& Response_Container::id() const {
  // @@protoc_insertion_point(field_get:Subutai.Response.Container.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_Container::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Subutai.Response.Container.id)
}
 void Response_Container::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Subutai.Response.Container.id)
}
 void Response_Container::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Subutai.Response.Container.id)
}
 ::std::string* Response_Container::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:Subutai.Response.Container.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_Container::release_id() {
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_Container::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Subutai.Response.Container.id)
}

// repeated .Subutai.Response.NetworkInterface interfaces = 3;
int Response_Container::interfaces_size() const {
  return interfaces_.size();
}
void Response_Container::clear_interfaces() {
  interfaces_.Clear();
}
 const ::Subutai::Response_NetworkInterface& Response_Container::interfaces(int index) const {
  // @@protoc_insertion_point(field_get:Subutai.Response.Container.interfaces)
  return interfaces_.Get(index);
}
 ::Subutai::Response_NetworkInterface* Response_Container::mutable_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:Subutai.Response.Container.interfaces)
  return interfaces_.Mutable(index);
}
 ::Subutai::Response_NetworkInterface* Response_Container::add_interfaces() {
  // @@protoc_insertion_point(field_add:Subutai.Response.Container.interfaces)
  return interfaces_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::Subutai::Response_NetworkInterface >&
Response_Container::interfaces() const {
  // @@protoc_insertion_point(field_list:Subutai.Response.Container.interfaces)
  return interfaces_;
}
 ::google::protobuf::RepeatedPtrField< ::Subutai::Response_NetworkInterface >*
Response_Container::mutable_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:Subutai.Response.Container.interfaces)
  return &interfaces_;
}

// optional .Subutai.Response.ContainerStatus status = 4;
bool Response_Container::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Response_Container::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
void Response_Container::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
void Response_Container::clear_status() {
  status_ = 0;
  clear_has_status();
}
 ::Subutai::Response_ContainerStatus Response_Container::status() const {
  // @@protoc_insertion_point(field_get:Subutai.Response.Container.status)
  return static_cast< ::Subutai::Response_ContainerStatus >(status_);
}
 void Response_Container::set_status(::Subutai::Response_ContainerStatus value) {
  assert(::Subutai::Response_ContainerStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Subutai.Response.Container.status)
}

// -------------------------------------------------------------------

// Response

// optional .Subutai.Response.ResponseType type = 1;
bool Response::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void Response::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::Subutai::Response_ResponseType Response::type() const {
  // @@protoc_insertion_point(field_get:Subutai.Response.type)
  return static_cast< ::Subutai::Response_ResponseType >(type_);
}
 void Response::set_type(::Subutai::Response_ResponseType value) {
  assert(::Subutai::Response_ResponseType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Subutai.Response.type)
}

// optional string hostname = 2;
bool Response::has_hostname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response::set_has_hostname() {
  _has_bits_[0] |= 0x00000002u;
}
void Response::clear_has_hostname() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hostname();
}
 const ::std::string& Response::hostname() const {
  // @@protoc_insertion_point(field_get:Subutai.Response.hostname)
  return hostname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_hostname(const ::std::string& value) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Subutai.Response.hostname)
}
 void Response::set_hostname(const char* value) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Subutai.Response.hostname)
}
 void Response::set_hostname(const char* value, size_t size) {
  set_has_hostname();
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Subutai.Response.hostname)
}
 ::std::string* Response::mutable_hostname() {
  set_has_hostname();
  // @@protoc_insertion_point(field_mutable:Subutai.Response.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response::release_hostname() {
  clear_has_hostname();
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_allocated_hostname(::std::string* hostname) {
  if (hostname != NULL) {
    set_has_hostname();
  } else {
    clear_has_hostname();
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:Subutai.Response.hostname)
}

// optional string id = 3;
bool Response::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Response::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
void Response::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void Response::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
 const ::std::string& Response::id() const {
  // @@protoc_insertion_point(field_get:Subutai.Response.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Subutai.Response.id)
}
 void Response::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Subutai.Response.id)
}
 void Response::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Subutai.Response.id)
}
 ::std::string* Response::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:Subutai.Response.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response::release_id() {
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Subutai.Response.id)
}

// repeated .Subutai.Response.NetworkInterface interfaces = 4;
int Response::interfaces_size() const {
  return interfaces_.size();
}
void Response::clear_interfaces() {
  interfaces_.Clear();
}
 const ::Subutai::Response_NetworkInterface& Response::interfaces(int index) const {
  // @@protoc_insertion_point(field_get:Subutai.Response.interfaces)
  return interfaces_.Get(index);
}
 ::Subutai::Response_NetworkInterface* Response::mutable_interfaces(int index) {
  // @@protoc_insertion_point(field_mutable:Subutai.Response.interfaces)
  return interfaces_.Mutable(index);
}
 ::Subutai::Response_NetworkInterface* Response::add_interfaces() {
  // @@protoc_insertion_point(field_add:Subutai.Response.interfaces)
  return interfaces_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::Subutai::Response_NetworkInterface >&
Response::interfaces() const {
  // @@protoc_insertion_point(field_list:Subutai.Response.interfaces)
  return interfaces_;
}
 ::google::protobuf::RepeatedPtrField< ::Subutai::Response_NetworkInterface >*
Response::mutable_interfaces() {
  // @@protoc_insertion_point(field_mutable_list:Subutai.Response.interfaces)
  return &interfaces_;
}

// repeated .Subutai.Response.Container containers = 5;
int Response::containers_size() const {
  return containers_.size();
}
void Response::clear_containers() {
  containers_.Clear();
}
 const ::Subutai::Response_Container& Response::containers(int index) const {
  // @@protoc_insertion_point(field_get:Subutai.Response.containers)
  return containers_.Get(index);
}
 ::Subutai::Response_Container* Response::mutable_containers(int index) {
  // @@protoc_insertion_point(field_mutable:Subutai.Response.containers)
  return containers_.Mutable(index);
}
 ::Subutai::Response_Container* Response::add_containers() {
  // @@protoc_insertion_point(field_add:Subutai.Response.containers)
  return containers_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::Subutai::Response_Container >&
Response::containers() const {
  // @@protoc_insertion_point(field_list:Subutai.Response.containers)
  return containers_;
}
 ::google::protobuf::RepeatedPtrField< ::Subutai::Response_Container >*
Response::mutable_containers() {
  // @@protoc_insertion_point(field_mutable_list:Subutai.Response.containers)
  return &containers_;
}

// repeated string ips = 6;
int Response::ips_size() const {
  return ips_.size();
}
void Response::clear_ips() {
  ips_.Clear();
}
 const ::std::string& Response::ips(int index) const {
  // @@protoc_insertion_point(field_get:Subutai.Response.ips)
  return ips_.Get(index);
}
 ::std::string* Response::mutable_ips(int index) {
  // @@protoc_insertion_point(field_mutable:Subutai.Response.ips)
  return ips_.Mutable(index);
}
 void Response::set_ips(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Subutai.Response.ips)
  ips_.Mutable(index)->assign(value);
}
 void Response::set_ips(int index, const char* value) {
  ips_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Subutai.Response.ips)
}
 void Response::set_ips(int index, const char* value, size_t size) {
  ips_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Subutai.Response.ips)
}
 ::std::string* Response::add_ips() {
  return ips_.Add();
}
 void Response::add_ips(const ::std::string& value) {
  ips_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Subutai.Response.ips)
}
 void Response::add_ips(const char* value) {
  ips_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Subutai.Response.ips)
}
 void Response::add_ips(const char* value, size_t size) {
  ips_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Subutai.Response.ips)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Response::ips() const {
  // @@protoc_insertion_point(field_list:Subutai.Response.ips)
  return ips_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Response::mutable_ips() {
  // @@protoc_insertion_point(field_mutable_list:Subutai.Response.ips)
  return &ips_;
}

// repeated string macs = 7;
int Response::macs_size() const {
  return macs_.size();
}
void Response::clear_macs() {
  macs_.Clear();
}
 const ::std::string& Response::macs(int index) const {
  // @@protoc_insertion_point(field_get:Subutai.Response.macs)
  return macs_.Get(index);
}
 ::std::string* Response::mutable_macs(int index) {
  // @@protoc_insertion_point(field_mutable:Subutai.Response.macs)
  return macs_.Mutable(index);
}
 void Response::set_macs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Subutai.Response.macs)
  macs_.Mutable(index)->assign(value);
}
 void Response::set_macs(int index, const char* value) {
  macs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Subutai.Response.macs)
}
 void Response::set_macs(int index, const char* value, size_t size) {
  macs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Subutai.Response.macs)
}
 ::std::string* Response::add_macs() {
  return macs_.Add();
}
 void Response::add_macs(const ::std::string& value) {
  macs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Subutai.Response.macs)
}
 void Response::add_macs(const char* value) {
  macs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Subutai.Response.macs)
}
 void Response::add_macs(const char* value, size_t size) {
  macs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Subutai.Response.macs)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Response::macs() const {
  // @@protoc_insertion_point(field_list:Subutai.Response.macs)
  return macs_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Response::mutable_macs() {
  // @@protoc_insertion_point(field_mutable_list:Subutai.Response.macs)
  return &macs_;
}

// optional string commandId = 8;
bool Response::has_commandid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Response::set_has_commandid() {
  _has_bits_[0] |= 0x00000080u;
}
void Response::clear_has_commandid() {
  _has_bits_[0] &= ~0x00000080u;
}
void Response::clear_commandid() {
  commandid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_commandid();
}
 const ::std::string& Response::commandid() const {
  // @@protoc_insertion_point(field_get:Subutai.Response.commandId)
  return commandid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_commandid(const ::std::string& value) {
  set_has_commandid();
  commandid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Subutai.Response.commandId)
}
 void Response::set_commandid(const char* value) {
  set_has_commandid();
  commandid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Subutai.Response.commandId)
}
 void Response::set_commandid(const char* value, size_t size) {
  set_has_commandid();
  commandid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Subutai.Response.commandId)
}
 ::std::string* Response::mutable_commandid() {
  set_has_commandid();
  // @@protoc_insertion_point(field_mutable:Subutai.Response.commandId)
  return commandid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response::release_commandid() {
  clear_has_commandid();
  return commandid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_allocated_commandid(::std::string* commandid) {
  if (commandid != NULL) {
    set_has_commandid();
  } else {
    clear_has_commandid();
  }
  commandid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commandid);
  // @@protoc_insertion_point(field_set_allocated:Subutai.Response.commandId)
}

// optional int32 pid = 9;
bool Response::has_pid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Response::set_has_pid() {
  _has_bits_[0] |= 0x00000100u;
}
void Response::clear_has_pid() {
  _has_bits_[0] &= ~0x00000100u;
}
void Response::clear_pid() {
  pid_ = 0;
  clear_has_pid();
}
 ::google::protobuf::int32 Response::pid() const {
  // @@protoc_insertion_point(field_get:Subutai.Response.pid)
  return pid_;
}
 void Response::set_pid(::google::protobuf::int32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:Subutai.Response.pid)
}

// optional int32 responseNumber = 10;
bool Response::has_responsenumber() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Response::set_has_responsenumber() {
  _has_bits_[0] |= 0x00000200u;
}
void Response::clear_has_responsenumber() {
  _has_bits_[0] &= ~0x00000200u;
}
void Response::clear_responsenumber() {
  responsenumber_ = 0;
  clear_has_responsenumber();
}
 ::google::protobuf::int32 Response::responsenumber() const {
  // @@protoc_insertion_point(field_get:Subutai.Response.responseNumber)
  return responsenumber_;
}
 void Response::set_responsenumber(::google::protobuf::int32 value) {
  set_has_responsenumber();
  responsenumber_ = value;
  // @@protoc_insertion_point(field_set:Subutai.Response.responseNumber)
}

// optional string stdOut = 11;
bool Response::has_stdout() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Response::set_has_stdout() {
  _has_bits_[0] |= 0x00000400u;
}
void Response::clear_has_stdout() {
  _has_bits_[0] &= ~0x00000400u;
}
void Response::clear_stdout() {
  stdout_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stdout();
}
 const ::std::string& Response::stdout() const {
  // @@protoc_insertion_point(field_get:Subutai.Response.stdOut)
  return stdout_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_stdout(const ::std::string& value) {
  set_has_stdout();
  stdout_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Subutai.Response.stdOut)
}
 void Response::set_stdout(const char* value) {
  set_has_stdout();
  stdout_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Subutai.Response.stdOut)
}
 void Response::set_stdout(const char* value, size_t size) {
  set_has_stdout();
  stdout_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Subutai.Response.stdOut)
}
 ::std::string* Response::mutable_stdout() {
  set_has_stdout();
  // @@protoc_insertion_point(field_mutable:Subutai.Response.stdOut)
  return stdout_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response::release_stdout() {
  clear_has_stdout();
  return stdout_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_allocated_stdout(::std::string* stdout) {
  if (stdout != NULL) {
    set_has_stdout();
  } else {
    clear_has_stdout();
  }
  stdout_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stdout);
  // @@protoc_insertion_point(field_set_allocated:Subutai.Response.stdOut)
}

// optional string stdErr = 12;
bool Response::has_stderr() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Response::set_has_stderr() {
  _has_bits_[0] |= 0x00000800u;
}
void Response::clear_has_stderr() {
  _has_bits_[0] &= ~0x00000800u;
}
void Response::clear_stderr() {
  stderr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stderr();
}
 const ::std::string& Response::stderr() const {
  // @@protoc_insertion_point(field_get:Subutai.Response.stdErr)
  return stderr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_stderr(const ::std::string& value) {
  set_has_stderr();
  stderr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Subutai.Response.stdErr)
}
 void Response::set_stderr(const char* value) {
  set_has_stderr();
  stderr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Subutai.Response.stdErr)
}
 void Response::set_stderr(const char* value, size_t size) {
  set_has_stderr();
  stderr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Subutai.Response.stdErr)
}
 ::std::string* Response::mutable_stderr() {
  set_has_stderr();
  // @@protoc_insertion_point(field_mutable:Subutai.Response.stdErr)
  return stderr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response::release_stderr() {
  clear_has_stderr();
  return stderr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_allocated_stderr(::std::string* stderr) {
  if (stderr != NULL) {
    set_has_stderr();
  } else {
    clear_has_stderr();
  }
  stderr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stderr);
  // @@protoc_insertion_point(field_set_allocated:Subutai.Response.stdErr)
}

// optional int32 exitCode = 13;
bool Response::has_exitcode() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Response::set_has_exitcode() {
  _has_bits_[0] |= 0x00001000u;
}
void Response::clear_has_exitcode() {
  _has_bits_[0] &= ~0x00001000u;
}
void Response::clear_exitcode() {
  exitcode_ = 0;
  clear_has_exitcode();
}
 ::google::protobuf::int32 Response::exitcode() const {
  // @@protoc_insertion_point(field_get:Subutai.Response.exitCode)
  return exitcode_;
}
 void Response::set_exitcode(::google::protobuf::int32 value) {
  set_has_exitcode();
  exitcode_ = value;
  // @@protoc_insertion_point(field_set:Subutai.Response.exitCode)
}

// repeated string configPoints = 14;
int Response::configpoints_size() const {
  return configpoints_.size();
}
void Response::clear_configpoints() {
  configpoints_.Clear();
}
 const ::std::string& Response::configpoints(int index) const {
  // @@protoc_insertion_point(field_get:Subutai.Response.configPoints)
  return configpoints_.Get(index);
}
 ::std::string* Response::mutable_configpoints(int index) {
  // @@protoc_insertion_point(field_mutable:Subutai.Response.configPoints)
  return configpoints_.Mutable(index);
}
 void Response::set_configpoints(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Subutai.Response.configPoints)
  configpoints_.Mutable(index)->assign(value);
}
 void Response::set_configpoints(int index, const char* value) {
  configpoints_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Subutai.Response.configPoints)
}
 void Response::set_configpoints(int index, const char* value, size_t size) {
  configpoints_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Subutai.Response.configPoints)
}
 ::std::string* Response::add_configpoints() {
  return configpoints_.Add();
}
 void Response::add_configpoints(const ::std::string& value) {
  configpoints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Subutai.Response.configPoints)
}
 void Response::add_configpoints(const char* value) {
  configpoints_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Subutai.Response.configPoints)
}
 void Response::add_configpoints(const char* value, size_t size) {
  configpoints_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Subutai.Response.configPoints)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Response::configpoints() const {
  // @@protoc_insertion_point(field_list:Subutai.Response.configPoints)
  return configpoints_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Response::mutable_configpoints() {
  // @@protoc_insertion_point(field_mutable_list:Subutai.Response.configPoints)
  return &configpoints_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Subutai

// @@protoc_insertion_point(global_scope)
